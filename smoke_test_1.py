from selenium.webdriver.common.by import By
from selenium.webdriver.support import expected_conditions as ES
from selenium.webdriver.support.wait import WebDriverWait

from chromebrowser import ChromeBrowser
from yandexbrowser import YaBrowser
from msedgebrowser import MsEdge
from firefoxbrowser import FireFox

from faker import Faker
from time import sleep
from locators import *
from os import system

# –ö–æ—Ä—Ç–µ–∂ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –±—Ä–∞—É–∑–µ—Ä–æ–≤
tuple_of_browser = (ChromeBrowser, MsEdge, YaBrowser)


def choice_of_answer(query, list_of_action):
    """
    –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–±–æ—Ä–∞ –æ–¥–Ω–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –∏–∑ —Å–ø–∏—Å–∫–∞ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö
    :param query: str - –í–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    :param list_of_action: –°–ø–∏—Å–æ–∫(–∫–æ—Ä—Ç–µ–∂) —Å –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏ –æ—Ç–≤–µ—Ç–æ–≤ (–Ω–æ–º–µ—Ä–∞ –æ—Ç–≤–µ—Ç–æ–≤ –ø—Ä–æ—Å—Ç–∞–≤–ª—è—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å 1)
    :return: –Ω–æ–º–µ—Ä –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞
    """
    choice = ''
    list_of_answer = [str(i + 1) for i in range(len(list_of_action))]
    while choice not in list_of_answer:
        system('cls||clear')
        print(query)
        for action in list_of_action:
            print('\t' + action)
        choice = input()
    return int(choice)


def choice_browser():
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª–∞—Å—Å –±—Ä–∞—É–∑–µ—Ä–∞ –∏–∑ –∫–æ—Ä—Ç–µ–∂–∞ —Å –±—Ä–∞—É–∑–µ—Ä–∞–º–∏
    :return: Browser
    """
    return tuple_of_browser[choice_of_answer(browser_query, browser_action) - 1]


class SmokeTestSwagLabs():
    """
    –ö–ª–∞—Å—Å —Å —Ç–µ—Å—Ç–∞–º–∏ –≤ –≤–∏–¥–µ –º–µ—Ç–æ–¥–æ–≤
    """
    def __init__(self, browser):
        self.ibrowser = browser()

    def test1(self):
        """
        –ú–µ—Ç–æ–¥ –¥–ª—è SmokeTest —Å–∞–π—Ç–∞ "Swag Labs"
        """
        print('–û–∂–∏–¥–∞–π—Ç–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤....üîÅ')
        # –ó–∞–≥—Ä—É–∑–∫–∞ —Å–∞–π—Ç–∞
        self.ibrowser.get_url(url_base)
        WebDriverWait(self.ibrowser.driver, 10).until(ES.element_to_be_clickable((By.XPATH, login_button)))

        # –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –Ω–∞ —Å–∞–π—Ç–µ
        self.ibrowser.send_keys_by_xpath(login_input, login)
        self.ibrowser.send_keys_by_xpath(password_input, password)
        self.ibrowser.click_by_xpath(login_button)

        # –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é + –≤—ã–±–æ—Ä
        WebDriverWait(self.ibrowser.driver, 10).until(ES.element_to_be_clickable((By.XPATH, shop_cart_link)))
        list_product = self.ibrowser.driver.find_elements(By.XPATH, product_names)
        product_user_choice = choice_of_answer(product_query,
                                               [str(i + 1) + '. ' + list_product[i].text for i in
                                                range(len(list_product))]) - 1
        user_product_name = list_product[product_user_choice].text
        user_product_price = self.ibrowser.driver.find_elements(By.XPATH, product_prices)[product_user_choice].text[-5:]

        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –≤ –∫–æ—Ä–∑–∏–Ω—É
        self.ibrowser.driver.find_elements(By.XPATH, product_buttons)[product_user_choice].click()

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–≤–∞—Ä–∞ –≤ –∫–æ—Ä–∑–∏–Ω–µ
        self.ibrowser.click_by_xpath(shop_cart_link)
        WebDriverWait(self.ibrowser.driver, 10).until(ES.element_to_be_clickable((By.XPATH, checkout_button)))
        assert user_product_name == self.ibrowser.value_by_xpath(
            user_product_cart), '–û—à–∏–±–∫–∞!! –í –∫–æ—Ä–∑–∏–Ω—É –¥–æ–±–∞–≤–ª–µ–Ω –∏–Ω–æ–π –ø—Ä–æ–¥—É–∫—Ç'
        assert user_product_price == self.ibrowser.value_by_xpath(product_prices)[
                                     -5:], '–û—à–∏–±–∫–∞!! –¶–µ–Ω–∞ –≤ –∫–æ—Ä–∑–∏–Ω–µ –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è'

        # –°–æ–∑–¥–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ –ø–æ–∫—É–ø–∞—Ç–µ–ª—è (—Ñ–µ–π–∫–æ–≤—ã—Ö)
        fake = Faker('en_US')
        first_name = fake.first_name()
        last_name = fake.last_name()
        postal_code = fake.postalcode()

        # –í–Ω–µ—Å–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–∫—É–ø–∞—Ç–µ–ª—è –≤ —Ñ–æ—Ä–º—É
        self.ibrowser.click_by_xpath(checkout_button)
        WebDriverWait(self.ibrowser.driver, 10).until(ES.element_to_be_clickable((By.XPATH, continue_button)))
        self.ibrowser.send_keys_by_xpath(first_name_input, first_name)
        self.ibrowser.send_keys_by_xpath(last_name_input, last_name)
        self.ibrowser.send_keys_by_xpath(postal_code_input, postal_code)

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞
        self.ibrowser.click_by_xpath(continue_button)
        WebDriverWait(self.ibrowser.driver, 10).until(ES.element_to_be_clickable((By.XPATH, finish_button)))
        assert user_product_name == self.ibrowser.value_by_xpath(user_product_cart), '–û—à–∏–±–∫–∞!! –í –∑–∞–∫–∞–∑–µ –∏–Ω–æ–π –ø—Ä–æ–¥—É–∫—Ç'
        assert user_product_price == self.ibrowser.value_by_xpath(summary_subtotal_label)[
                                     -5:], '–û—à–∏–±–∫–∞!! –¶–µ–Ω–∞ –≤ –∑–∞–∫–∞–∑–µ –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è'

        # –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ –∏ –≤–æ–∑–≤—Ä–∞—Ç –≤ —Ä–∞–∑–¥–µ–ª –ø–æ–∫—É–ø–æ–∫
        self.ibrowser.click_by_xpath(finish_button)
        WebDriverWait(self.ibrowser.driver, 10).until(ES.element_to_be_clickable(
            (By.XPATH, back_to_products_button)))
        assert 'Thank you for your order!' == self.ibrowser.value_by_xpath(complete_label), '–û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞'
        self.ibrowser.click_by_xpath(back_to_products_button)
        print(
            f'\n–í–∞—à —Ç–æ–≤–∞—Ä "{user_product_name}" –æ—Ñ–æ—Ä–º–ª–µ–Ω, –Ω–µ –∑–∞–±—É–¥—å—Ç–µ –ø–æ–∫–æ—Ä–º–∏—Ç—å –º–æ—Ä–∫–æ–≤–∫–æ–π –ü–æ–Ω–∏,'
            f'–∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–≤–µ–∑–µ—Ç –≤–∞–º –µ–≥–æüòÄ')

        # –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –±—Ä–∞—É–∑–µ—Ä–∞
        self.ibrowser.quit()
